plugins {
    id 'com.android.library'
}

android {
    namespace libAndroidNamespace
    compileSdk libAndroidCompileSdk

    defaultConfig {
        minSdk libAndroidMinSdk
        targetSdk libAndroidTargetSdk
        versionCode libVersionCode
        versionName libVersionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
        externalNativeBuild {
            cmake {
                cppFlags "-std=c++11"
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
            version "3.22.1"
        }
    }
    compileOptions {
        sourceCompatibility libSourceCompatibility
        targetCompatibility libTargetCompatibility
    }
}

dependencies {
    implementation project(':core')

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

android {
    publishing {
        singleVariant('release') {
            withSourcesJar()
            withJavadocJar()
        }
    }
}
publishing {
    publications {
        release(MavenPublication) {
            groupId = libGroupName
            artifactId = "${rootProject.name}-${project.name}"
            version = libVersionName
            afterEvaluate {
                from components.release
            }
            pom {
                name = libName
                description = 'The JNI-Encapsulated SoundTouch library'
                url = 'https://github.com/Tianscar/soundtouch-jni'
                licenses {
                    license {
                        name = 'The MIT License'
                        url = 'https://spdx.org/licenses/MIT.html'
                    }
                }
                developers {
                    developer {
                        id = 'Tianscar'
                        name = 'Tiansword Carbonicacid'
                        email = 'tianscar@protonmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git@github.com/Tianscar/soundtouch-jni.git'
                    developerConnection = 'scm:git:git@github.com/Tianscar/soundtouch-jni.git'
                    url = 'https://github.com/Tianscar/soundtouch-jni'
                }
            }
        }
    }
    repositories {
        maven {
            name = "OSSRH"
            if (project.version.toString().endsWith("-SNAPSHOT")) {
                url = "https://s01.oss.sonatype.org/content/repositories/snapshots"
            } else {
                url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            }
            credentials {
                username = findProperty("ossrhUsername") ?: System.getenv("OSSRH_USERNAME")
                password = findProperty("ossrhPassword") ?: System.getenv("OSSRH_PASSWORD")
            }
        }
    }
}

signing {
    def signingKey = findProperty("signingKey") ?: System.getenv("GPG_KEY")
    def signingPassword = findProperty("signingPassword") ?:System.getenv("GPG_PASSWORD")
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign(publishing.publications.release)
}